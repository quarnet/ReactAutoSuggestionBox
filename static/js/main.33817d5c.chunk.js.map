{"version":3,"sources":["Utils/levenshtein.js","Utils/classes.js","Utils/utils.js","Store/actions.js","Store/actionTypes.js","Utils/api.js","Components/UI/AutoSuggestion/SuggestionOption/CountryFlag.js","Components/UI/AutoSuggestion/SuggestionOption/SuggestionOption.js","Components/UI/AutoSuggestion/AutoSuggestion.js","Components/Header/header.js","Components/Content/CountryFull.js","App.js","serviceWorker.js","Store/initialStore.js","Store/reducer.js","index.js"],"names":["exports","getEditDistance","a","b","length","i","j","matrix","charAt","Math","min","Currency","code","name","symbol","this","LatLng","lat","lng","Language","iso639_1","iso639_2","nativeName","Country","alpha2Code","alpha3Code","callingCodes","capital","region","subregion","population","latlng","area","timezones","numericCode","currencies","languages","flag","cioc","parseApiToCountry","apiRes","country","map","currency","lang","capitalize","inputString","toUpperCase","getAllCountries","list","type","payload","data","getAllCountriesAsync","dispatch","AllCountryData","stored","localStorage","getItem","JSON","parse","getCountriesFromLocalStorage","c","Promise","resolve","Axios","get","then","res","countries","setItem","stringify","catch","err","error","CountryFlag","props","imgUrl","url","imgClass","className","src","alt","SuggestionOption","optionData","isActive","join","onClick","clicked","AutoSuggestion","dataAccessor","onSelect","state","isDataAvailable","isDownloading","options","showOptions","keyword","activeIndex","getData","setState","filterData","search","filteredOptions","option","s","d","sort","slice","onchange","e","searchParameter","target","value","isDownloadRequired","keyDown","key","keyCode","oldActiveIndex","newActiveIndex","optionSelected","onChange","onKeyDown","index","Component","Header","getCountriesData","getCountries","selectedOption","setCountry","connect","isError","allCountries","setActiveCountry","countryData","activeCountry","renderElem","App","Boolean","window","location","hostname","match","initialStore","reducer","action","store","createStore","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.33817d5c.chunk.js","sourcesContent":["exports.getEditDistance = function (a, b) {\r\n    if (a.length === 0) return b.length;\r\n    if (b.length === 0) return a.length;\r\n\r\n    var matrix = [];\r\n\r\n    // increment along the first column of each row\r\n    var i;\r\n    for (i = 0; i <= b.length; i++) {\r\n        matrix[i] = [i];\r\n    }\r\n\r\n    // increment each column in the first row\r\n    var j;\r\n    for (j = 0; j <= a.length; j++) {\r\n        matrix[0][j] = j;\r\n    }\r\n\r\n    // Fill in the rest of the matrix\r\n    for (i = 1; i <= b.length; i++) {\r\n        for (j = 1; j <= a.length; j++) {\r\n            if (b.charAt(i - 1) === a.charAt(j - 1)) {\r\n                matrix[i][j] = matrix[i - 1][j - 1];\r\n            } else {\r\n                matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1, // substitution\r\n                    Math.min(matrix[i][j - 1] + 1, // insertion\r\n                        matrix[i - 1][j] + 1)); // deletion\r\n            }\r\n        }\r\n    }\r\n\r\n    return matrix[b.length][a.length];\r\n};","export class Currency {\r\n    constructor(code, name, symbol) {\r\n        this.code = code;\r\n        this.name = name;\r\n        this.symbol = symbol;\r\n    }\r\n}\r\n\r\nexport class LatLng {\r\n    constructor(lat, lng) {\r\n        this.lat = lat;\r\n        this.lng = lng;\r\n    }\r\n}\r\n\r\nexport class Language {\r\n    constructor(iso639_1, iso639_2, name, nativeName) {\r\n        this.iso639_1 = iso639_1;\r\n        this.iso639_2 = iso639_2;\r\n        this.name = name;\r\n        this.nativeName = nativeName;\r\n    }\r\n}\r\n\r\nexport class Country {\r\n    name = null;\r\n    alpha2Code = null;\r\n    alpha3Code = null;\r\n    callingCodes = [];\r\n    capital = null;\r\n    region = null;\r\n    subregion = null;\r\n    population = null;\r\n    latlng = new LatLng();\r\n    area = null;\r\n    timezones = [];\r\n    nativeName = null;\r\n    numericCode = null;\r\n    currencies = [];\r\n    languages = [];\r\n    flag = null;\r\n    cioc = null;\r\n}","import { Country, LatLng, Language, Currency } from \"./classes\";\r\n\r\nexport const setCountriesToLocalStorage = data => {\r\n    localStorage.setItem('countries', JSON.stringify(data));\r\n};\r\n\r\nexport const getCountriesFromLocalStorage = data => {\r\n    const stored = localStorage.getItem('countries');\r\n    if (stored) {\r\n        return JSON.parse(stored);\r\n    }\r\n    return null;\r\n};\r\n\r\nexport const parseApiToCountry = apiRes => {\r\n    let country = new Country();\r\n    country.alpha2Code = apiRes.alpha2Code;\r\n    country.alpha3Code = apiRes.alpha3Code;\r\n    country.area = apiRes.area;\r\n    country.callingCodes = apiRes.callingCodes;\r\n    country.capital = apiRes.capital;\r\n    country.cioc = apiRes.cioc;\r\n    country.flag = apiRes.flag;\r\n    country.latlng = new LatLng(apiRes.latlng[0], apiRes.latlng[1]);\r\n    country.name = apiRes.name;\r\n    country.nativeName = apiRes.nativeName;\r\n    country.numericCode = apiRes.numericCode;\r\n    country.population = apiRes.population;\r\n    country.region = apiRes.region;\r\n    country.subregion = apiRes.subregion;\r\n    country.timezones = apiRes.timezones;\r\n\r\n    country.currencies = apiRes.currencies.map (currency => new Currency (currency.code, currency.name, currency.symbol));\r\n    country.languages = apiRes.languages.map(lang => new Language(lang.iso639_1, lang.iso639_2, lang.name, lang.nativeName));\r\n\r\n    return country;\r\n}\r\n\r\nexport const capitalize = inputString => inputString.toUpperCase();","import { GET_ALL_COUNTRIES, SET_ERROR, SET_ACTIVE_COUNTRY } from \"./actionTypes\"\r\nimport { GetAllCountries } from \"../Utils/api\";\r\nimport { getCountriesFromLocalStorage, setCountriesToLocalStorage, parseApiToCountry } from \"../Utils/utils\";\r\n\r\nconst getAllCountries = list => {\r\n    return {\r\n        type: GET_ALL_COUNTRIES,\r\n        payload: {\r\n            data: list\r\n        }\r\n    };\r\n};\r\n\r\nconst setError = error => {\r\n    return {\r\n        type: SET_ERROR,\r\n        payload: {\r\n            error: error\r\n        }\r\n    }\r\n}\r\n\r\nexport const setActiveCountry = country => {\r\n    return {\r\n        type: SET_ACTIVE_COUNTRY,\r\n        payload: {\r\n            country: country\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAllCountriesAsync = () => {\r\n    return dispatch => {\r\n        const AllCountryData = getCountriesFromLocalStorage();\r\n        if (AllCountryData) {\r\n            dispatch(getAllCountries(AllCountryData.map(c => parseApiToCountry(c))));\r\n            return Promise.resolve(true);\r\n        }\r\n\r\n        return GetAllCountries().then(countries => {\r\n            dispatch(getAllCountries(countries.map(c => parseApiToCountry(c))));\r\n            setCountriesToLocalStorage(countries);\r\n            return true;\r\n        }).catch(err => {\r\n            dispatch(setError('Failed to load data from API. Please reload the page.'));\r\n            return false;\r\n        })\r\n    };\r\n};\r\n","export const GET_ALL_COUNTRIES = 'GET_ALL_COUNTRIES';\r\nexport const SET_ERROR = 'SET_ERROR';\r\nexport const SET_ACTIVE_COUNTRY = 'SET_ACTIVE_COUNTRY';","import Axios from \"axios\"\r\n\r\nconst AllCountryURL = 'https://restcountries.eu/rest/v2/all';\r\nexport const GetAllCountries = () => {\r\n    return Axios.get(AllCountryURL).then (res => {\r\n        const response = res.data;\r\n        return response;\r\n    });\r\n};\r\n","import React from 'react';\r\n\r\nexport const CountryFlag = (props) => {\r\n    const imgUrl = props.url;\r\n    const imgClass = props.imgClass;\r\n    return (\r\n        <div className={imgClass}>\r\n            <img src={imgUrl} alt=\"flag\" className=\"flag-img\"></img>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CountryFlag;","import React from 'react';\r\nimport { capitalize } from '../../../../Utils/utils';\r\nimport CountryFlag from './CountryFlag';\r\n\r\nconst SuggestionOption = (props) => {\r\n    const { optionData, isActive } = props;\r\n    return (\r\n        <div className={['suggestion-option', isActive ? 'active' : ''].join(' ')} onClick={() => props.clicked(optionData)}>\r\n            <div className=\"country-flag-sm\">\r\n                <CountryFlag url={optionData.flag} imgClass=\"country-flag-wrapper\"></CountryFlag>\r\n            </div>\r\n            <div className=\"country-sm\">\r\n                <div className=\"country-row\">\r\n                    <b>\r\n                        {capitalize(optionData.name)}\r\n                    </b>\r\n                    {\r\n                        ' - ' + optionData.alpha3Code + ' (' + optionData.nativeName + ')'\r\n                    }\r\n                </div>\r\n                <div className=\"country-detail-row\">\r\n                    {\r\n                        optionData.region + ' (capital: ' + optionData.capital + ') + Popu.: ' + optionData.population\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SuggestionOption;","import React, { Component } from 'react';\r\nimport { getEditDistance } from '../../../Utils/levenshtein';\r\nimport SuggestionOption from './SuggestionOption/SuggestionOption';\r\nconst limiter = 10;\r\nclass AutoSuggestion extends Component {\r\n    dataAccessor = this.props.dataAccessor;\r\n    onSelect = this.props.onSelect;\r\n    state = {\r\n        isDataAvailable: false,\r\n        isDownloading: false,\r\n        data: [],\r\n        options: [],\r\n        showOptions: false,\r\n        keyword: '',\r\n        activeIndex: -1\r\n    }\r\n\r\n    getData = () => {\r\n        this.setState({\r\n            isDownloading: true\r\n        }, () => {\r\n            this.dataAccessor().then(res => {\r\n                this.setState({\r\n                    data: [...res],\r\n                    isDataAvailable: true,\r\n                    isDownloading: false\r\n                }, () => {\r\n                    this.filterData(this.state.keyword);\r\n                });\r\n            })\r\n        });\r\n    }\r\n\r\n    filterData = search => {\r\n        const { data } = this.state;\r\n        const filteredOptions = data.map(option => {\r\n            const s = getEditDistance(search, option.name);\r\n            return {\r\n                ...option,\r\n                d: s\r\n            };\r\n        }).sort((a, b) => a.d - b.d).slice(0, limiter);\r\n\r\n        this.setState({\r\n            options: filteredOptions\r\n        })\r\n    }\r\n\r\n    onchange = (e) => {\r\n\r\n        const searchParameter = e.target.value;\r\n        const isDownloadRequired = !this.state.isDataAvailable;\r\n\r\n        this.setState({\r\n            keyword: searchParameter,\r\n            showOptions: !!searchParameter.length\r\n        }, () => {\r\n            if (isDownloadRequired) {\r\n                this.getData();\r\n            } else {\r\n                this.filterData(searchParameter);\r\n            }\r\n        });\r\n    }\r\n\r\n    keyDown = (e) => {\r\n        const key = e.keyCode;\r\n        const oldActiveIndex = this.state.activeIndex;\r\n        let newActiveIndex = oldActiveIndex;\r\n        switch (key) {\r\n            case 38: {\r\n                //top\r\n                newActiveIndex = newActiveIndex === 0 ? this.state.options.length - 1 : newActiveIndex - 1;\r\n                break;\r\n            }\r\n            case 37: {\r\n                //left\r\n                break;\r\n            }\r\n            case 39: {\r\n                //right\r\n                break;\r\n            }\r\n            case 40: {\r\n                //bottom\r\n                newActiveIndex = newActiveIndex === this.state.options.length - 1 ? 0 : newActiveIndex + 1;\r\n                break;\r\n            }\r\n            case 13: {\r\n                //enter\r\n                const { options } = this.state;\r\n                if (options.length && oldActiveIndex >= 0 && oldActiveIndex <= options.length) {\r\n                    this.setState({\r\n                        showOptions: false,\r\n                        keyword: '',\r\n                        activeIndex: -1,\r\n                        options: []\r\n                    })\r\n                    this.onSelect(options[oldActiveIndex]);\r\n                }\r\n                return;\r\n            }\r\n            case 27: {\r\n                //escape\r\n                this.setState({\r\n                    showOptions: false\r\n                });\r\n                return;\r\n            }\r\n            default:\r\n                return;\r\n        }\r\n\r\n        if (newActiveIndex !== oldActiveIndex) {\r\n            this.setState({\r\n                activeIndex: newActiveIndex\r\n            })\r\n        }\r\n    }\r\n\r\n    optionSelected = option => {\r\n        this.setState({\r\n            showOptions: false,\r\n            keyword: '',\r\n            activeIndex: -1,\r\n            options: []\r\n        })\r\n        this.onSelect(option);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"suggestionbox-container\">\r\n                <div className=\"suggestionbox-label\">Search</div>\r\n                <div className=\"suggestionbox-wrapper\">\r\n                    <input\r\n                        onChange={this.onchange}\r\n                        value={this.state.keyword}\r\n                        onKeyDown={this.keyDown}\r\n                        className=\"suggestionbox\"\r\n                    ></input>\r\n                    {\r\n                        this.state.showOptions && (\r\n                            <div className=\"suggestionbox-options-wrapper\">\r\n                                <ul className=\"suggestionbox-options\">\r\n                                    {\r\n                                        this.state.options.map((option, index) => {\r\n                                            const isActive = index === this.state.activeIndex;\r\n                                            return (\r\n                                                <SuggestionOption\r\n                                                    key={option.name}\r\n                                                    optionData={option}\r\n                                                    isActive={isActive}\r\n                                                    clicked={this.optionSelected}>\r\n                                                </SuggestionOption>\r\n\r\n                                            );\r\n                                        })\r\n                                    }\r\n                                </ul>\r\n                            </div>\r\n                        )\r\n                    }\r\n                </div>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default AutoSuggestion;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAllCountriesAsync, setActiveCountry } from '../../Store/actions';\r\nimport AutoSuggestion from '../UI/AutoSuggestion/AutoSuggestion';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        isError: state.isError,\r\n        countries: state.allCountries\r\n    };\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n    return {\r\n        getCountries: () => dispatch(getAllCountriesAsync()),\r\n        setCountry: (country) => dispatch(setActiveCountry(country))\r\n    };\r\n};\r\n\r\nclass Header extends Component {\r\n\r\n    getCountriesData = () => {\r\n        return this.props.getCountries().then(res => {\r\n            return this.props.countries;\r\n        });\r\n    }\r\n\r\n    onSelect = (selectedOption) => {\r\n        this.props.setCountry(selectedOption);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"app-header\">\r\n                <AutoSuggestion\r\n                    dataAccessor={this.getCountriesData}\r\n                    onSelect={this.onSelect}\r\n                ></AutoSuggestion>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Header);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport CountryFlag from '../UI/AutoSuggestion/SuggestionOption/CountryFlag';\r\nimport { capitalize } from '../../Utils/utils';\r\n\r\nconst mapStateToProps = state => {\r\n    return {\r\n        countryData: state.activeCountry\r\n    };\r\n}\r\n\r\nconst CountryFull = props => {\r\n\r\n    const country = props.countryData;\r\n    let renderElem = !props.countryData ? <div className=\"empty-country\">Please search a country.</div> : (\r\n        <div className=\"country-details\">\r\n            <div className=\"country-flag-bg\">\r\n                <CountryFlag url={country.flag} imgClass=\"flag-big\"></CountryFlag>\r\n            </div>\r\n            <div className=\"country-bg-main\">\r\n                <div className=\"tbl\">\r\n                    <div className=\"tbl-row\">\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-label\">Name : </span>\r\n                        </div>\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-value\">{capitalize(country.name)}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"tbl-row\">\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-label\">Native Name : </span>\r\n                        </div>\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-value\">{country.nativeName}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"tbl-row\">\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-label\">Region : </span>\r\n                        </div>\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-value\">{country.region}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"tbl-row\">\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-label\">Latitude : </span>\r\n                        </div>\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-value\">{country.latlng.lat}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"tbl-row\">\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-label\">Longitude : </span>\r\n                        </div>\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-value\">{country.latlng.lng}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"tbl-row\">\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-label\">Population : </span>\r\n                        </div>\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-value\">{country.population}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"tbl-row\">\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-label\">Area : </span>\r\n                        </div>\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-value\">{country.area}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"tbl-row\">\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-label\">Alpha 2 Code : </span>\r\n                        </div>\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-value\">{country.alpha2Code}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"tbl-row\">\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-label\">Alpha 3 Code : </span>\r\n                        </div>\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-value\">{country.alpha3Code}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"tbl-row\">\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-label\">Calling Codes : </span>\r\n                        </div>\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-value\">{country.callingCodes.join(', ')}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"tbl-row\">\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-label\">Time Zones : </span>\r\n                        </div>\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-value\">{country.timezones.join(', ')}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"tbl-row\">\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-label\">Numeric Code : </span>\r\n                        </div>\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-value\">{country.numericCode}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"tbl-row\">\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-label\">Currencies : </span>\r\n                        </div>\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-value\">{country.currencies.map(c => {\r\n                                return c.name + ' (' + c.symbol + ')'\r\n                            }).join(', ')}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div className=\"tbl-row\">\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-label\">Languages : </span>\r\n                        </div>\r\n                        <div className=\"tbl-cell\">\r\n                            <span className=\"data-value\">{country.languages.map(c => c.name).join(', ')}</span>\r\n                        </div>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n    return <div className=\"country-details-wrapper\">{renderElem}</div>;\r\n}\r\n\r\nexport default connect(mapStateToProps)(CountryFull);","import React from 'react';\r\nimport './App.css';\r\nimport Header from './Components/Header/header';\r\nimport CountryFull from './Components/Content/CountryFull';\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Header></Header>\r\n      <CountryFull></CountryFull>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","const initialStore = {\r\n    isDataAvailable: false,\r\n    isError: false,\r\n    error: null,\r\n    allCountries: [],\r\n    activeCountry: null\r\n};\r\n\r\nexport default initialStore;","import initialStore from \"./initialStore\";\r\nimport { GET_ALL_COUNTRIES, SET_ERROR, SET_ACTIVE_COUNTRY } from \"./actionTypes\";\r\n\r\nconst reducer = (state = initialStore, action) => {\r\n    switch (action.type) {\r\n        case GET_ALL_COUNTRIES: {\r\n            return {\r\n                ...state,\r\n                allCountries: action.payload.data,\r\n                isDataAvailable: true,\r\n                isError: false\r\n            };\r\n        }\r\n        case SET_ERROR: {\r\n            return {\r\n                ...state,\r\n                isError: true,\r\n                error: action.payload.error\r\n            };\r\n        }\r\n        case SET_ACTIVE_COUNTRY: {\r\n            return {\r\n                ...state,\r\n                activeCountry: action.payload.country\r\n            };\r\n        }\r\n        default: {\r\n            return state;\r\n        }\r\n    }\r\n}\r\n\r\nexport default reducer;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reducer from './Store/reducer';\r\nimport thunk from 'redux-thunk';\r\nimport { Provider } from 'react-redux';\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk));\r\nReactDOM.render(<Provider store={store}><App /></Provider>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}